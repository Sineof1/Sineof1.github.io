{"version":3,"sources":["problem_data.js","components/Goalnodes.js","components/SVGModel.js","App.js","index.js"],"names":["problemData","id","fraction","fracNum","fracDenom","estimate","text","answers","q1","q2","txtans","svgType","svg","Goalnodes","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opener","verb","part","select","select2","numInput","props","probnum","concat","space","options","numInputOptions","b","length","push","react_default","a","createElement","key","value","className","onChange","ans2","onKeyUp","ans3","disabled","ans1Submit","type","maxLength","autoComplete","g","ans4","style","opacity","color","ans1","Component","SVGModel","vertSections","svgs","circs","numSVGs","Math","ceil","ans3Val","ans1Val","secs","svgHeight","window","innerHeight","x","y","width","height","fill","stroke","strokeDasharray","c","preserveAspectRatio","slice","reverse","svgWidth","innerWidth","rad","min","f","randX","floor","random","randY","cx","cy","r","App","prob","answer1","answer3","ans1Entered","handleAnswer1","bind","assertThisInitialized","handleAnswer2","handleAnswer3","handleAnswer4","nextProblem","evt","response","Number","document","getElementById","keyCode","d3","attr","setState","setTimeout","MathJax","Hub","Queue","onClick","components_Goalnodes","components_SVGModel","ReactDOM","render","src_App","focus"],"mappings":"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","file":"static/js/main.a356683b.chunk.js","sourcesContent":["const problemData = [\r\n  {\r\n    id : 1,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{5}{1}}\\\\)',\r\n    fracNum : 5,\r\n    fracDenom : 1,\r\n    estimate : 'greater than 1',\r\n    text : 'cups',\r\n    answers : [{q1 : 1, q2 : ['5 cups', 'a whole cup', '2 cups']}, {q1 : 5}],\r\n    txtans : 'a whole cup',\r\n    svgType : 'area',\r\n    svg : ''\r\n  },\r\n  {\r\n    id : 2,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{6}{7}}\\\\)',\r\n    fracNum : 6,\r\n    fracDenom : 7,\r\n    estimate : 'less than 1',\r\n    text : 'of the toys',\r\n    answers : [{q1 : 7, q2 : ['a whole toy', '6 toys', '7 toys', 'the set']}, {q1 : 6}],\r\n    txtans : 'the set',\r\n    svgType : 'set',\r\n    svg : ''\r\n  },\r\n  {\r\n    id : 3,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{5}{3}}\\\\)',\r\n    fracNum : 5,\r\n    fracDenom : 3,\r\n    estimate : 'greater than 1',\r\n    text : 'yards',\r\n    answers : [{q1 : 3, q2 : ['5 yards', '3 yards', 'a whole yard']}, {q1 : 5}],\r\n    txtans : 'a whole yard',\r\n    svgType : 'area',\r\n    svg : ''\r\n  },\r\n  {\r\n    id : 3,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{7}{8}}\\\\)',\r\n    fracNum : 7,\r\n    fracDenom : 8,\r\n    estimate : 'less than 1',\r\n    text : 'the number',\r\n    answers : [{q1 : 8, q2 : ['a whole number', '7', '8']}, {q1 : 7}],\r\n    txtans : 'a whole number',\r\n    svgType : 'number-line',\r\n    svg : ''\r\n  }\r\n]\r\n\r\nexport default problemData;\r\n","import React, {Component} from 'react';\r\nimport problemData from '../problem_data.js';\r\n\r\nclass Goalnodes extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n\r\n  }\r\n  render() {\r\n    let opener;\r\n    if (problemData[this.props.probnum - 1].svgType !== 'number-line') {\r\n       opener = `${problemData[this.props.probnum - 1].fraction} ${problemData[this.props.probnum - 1].text}`;\r\n    }\r\n    else opener = `${problemData[this.props.probnum - 1].text} ${problemData[this.props.probnum - 1].fraction}`;\r\n\r\n    let verb, part;\r\n    if (problemData[this.props.probnum - 1].fracDenom === 1) {verb = 'is'; part = 'part'}\r\n    else {verb = 'are'; part = 'equal parts'}\r\n\r\n    let select, select2, numInput;\r\n    let options = [];\r\n    let numInputOptions = [];\r\n    for (var b = 0; b < problemData[this.props.probnum - 1].answers[0].q2.length; b++) {\r\n       options.push(<option key={b} value={problemData[this.props.probnum - 1].answers[0].q2[b]}>{problemData[this.props.probnum - 1].answers[0].q2[b]}</option>)\r\n    }\r\n    select = (\r\n      <select className='gnSelect' id='wholeName' onChange={this.props.ans2}>\r\n      <option value=''></option>\r\n      {options}\r\n      </select>\r\n    );\r\n    if (problemData[this.props.probnum - 1].svgType !== 'set') {\r\n       numInput = <input onKeyUp={this.props.ans3} disabled={this.props.ans1Submit ? '' : 'disabled'} type=\"text\" id='numer' className='gnInput' maxLength='1' autoComplete='off' />;\r\n    }\r\n    else {\r\n    for (var g = 0; g < problemData[this.props.probnum - 1].fracNum + 1; g++) {\r\n       numInputOptions.push(<option key={g} value={g}>{g}</option>);\r\n    }\r\n    numInput = (\r\n      <select className='gnSelect' id='numer' disabled={this.props.ans1Submit ? '' : 'disabled'} onChange={this.props.ans3}>\r\n      <option value=''></option>\r\n      {numInputOptions}\r\n      </select>\r\n    );\r\n    }\r\n    select2 = (\r\n      <select className='gnSelect' id='estimate' onChange={this.props.ans4}>\r\n      <option value=''></option>\r\n      <option key='a' value='less than 1'>less than</option>\r\n      <option key='b' value='equal to 1'>equal to</option>\r\n      <option key='c' value='greater than 1'>greater than</option>\r\n      </select>\r\n    );\r\n\r\n    let space;\r\n    if (problemData[this.props.probnum - 1].fracDenom !== 1 && problemData[this.props.probnum - 1].svgType === 'set') {\r\n       space = <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#8202;</span>;\r\n    }\r\n    else if (problemData[this.props.probnum - 1].fracDenom !== 1 && problemData[this.props.probnum - 1].svgType === 'area') {\r\n       space = <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#8202;</span>;\r\n    }\r\n    else if (problemData[this.props.probnum - 1].fracDenom === 1 && problemData[this.props.probnum - 1].svgType === 'area') {\r\n       space = <span>&nbsp;&nbsp;&nbsp;&#8202;</span>;\r\n    }\r\n    if (problemData[this.props.probnum - 1].svgType === 'set') {\r\n       space = <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>;\r\n    }\r\n    return (\r\n    <div id='goalnodeDiv' key={this.props.probnum} style={{opacity : 1}}>\r\n    <p style={{color : 'teal'}}>Model the fraction <strong>{opener}</strong>.</p>\r\n    <p className='gnode'>\r\n    There {verb} <input onKeyUp={this.props.ans1} type=\"text\" id='denom' className='gnInput' maxLength='2' autoComplete='off' /> {part} in {select}.\r\n    </p>\r\n    <p className='gnode'>\r\n    {space}Count {numInput} part(s) to model the fraction {problemData[this.props.probnum - 1].fraction}.\r\n    </p>\r\n    <p className='gnode'>\r\n    The fraction {opener} is {select2} 1 whole.\r\n    </p>\r\n    </div>\r\n    );\r\n   }\r\n}\r\n\r\nexport default Goalnodes;\r\n","import React, {Component} from 'react';\r\nimport problemData from '../problem_data';\r\n\r\nclass SVGModel extends Component {\r\n   constructor() {\r\n      super();\r\n      this.state = {};\r\n   }\r\n   render() {\r\n     let vertSections = [];\r\n     let svgs = [];\r\n     let circs = [];\r\n     let numSVGs = Math.ceil(this.props.ans3Val / this.props.ans1Val);\r\n     if (numSVGs === 0) numSVGs = 1;\r\n\r\n     if (problemData[this.props.probnum - 1].svgType === 'area') {\r\n        let secs = this.props.ans1Val || 1;\r\n        let svgHeight = (0.62 * window.innerHeight - 25) / numSVGs;\r\n\r\n        for (var b = 0; b < secs * numSVGs; b++) {\r\n        let id = `section${b + 1}`;\r\n        vertSections.push(\r\n        <rect key={b} id={id} className='vertSection' x='0' y={svgHeight - ((b % secs + 1) * (svgHeight / secs))} width='100%' height={svgHeight / secs} style={{fill : 'none', stroke : 'gray', strokeDasharray : '5 5'}} />\r\n        );\r\n        }\r\n\r\n        for (var c = 0; c < numSVGs; c++) {\r\n        svgs.push(\r\n        <svg key={c} className='vertSVG' width='100%' height={svgHeight} preserveAspectRatio='xMidYMid'>\r\n        {vertSections.slice(c * (secs), secs * (c + 1))}\r\n        </svg>\r\n        );\r\n        }\r\n        return (<div>{svgs.reverse()}</div>);\r\n     }\r\n     else if (problemData[this.props.probnum - 1].svgType === 'set') {\r\n        let svgHeight = 0.62 * window.innerHeight - 25;\r\n        let svgWidth = 0.41 * window.innerWidth - 25;\r\n        let secs = this.props.ans1Val || 1;\r\n        let rad = Math.min(svgHeight, svgWidth) / (secs * 2.05);\r\n\r\n        for (var f = 0; f < secs; f++) {\r\n        let randX = Math.floor(Math.random() * ((svgWidth - (rad + 10)) - (rad + 10) + 1)) + (rad + 10);\r\n        let randY = Math.floor(Math.random() * ((svgHeight - (rad + 10)) - (rad + 10) + 1)) + (rad + 10);\r\n        circs.push(\r\n        <circle key={f} id={`section${f + 1}`} className='vertSection' cx={randX} cy={randY} r={rad} style={{stroke : 'gray', fill : 'white'}} />\r\n        );\r\n        }\r\n        return (\r\n        <svg width='100%' height={svgHeight} preserveAspectRatio='xMidYMid'>\r\n        {circs}\r\n        </svg>\r\n        );\r\n     }\r\n   }\r\n}\r\n\r\nexport default SVGModel;\r\n","import React, {Component} from 'react';\nimport Goalnodes from './components/Goalnodes';\nimport SVGModel from './components/SVGModel';\nimport * as d3 from 'd3';\nimport problemData from './problem_data.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {prob : 1, answer1 : 1, answer3 : 1, ans1Entered : false};\n    this.handleAnswer1 = this.handleAnswer1.bind(this);\n    this.handleAnswer2 = this.handleAnswer2.bind(this);\n    this.handleAnswer3 = this.handleAnswer3.bind(this);\n    this.handleAnswer4 = this.handleAnswer4.bind(this);\n    this.nextProblem = this.nextProblem.bind(this);\n  }\n  handleAnswer1(evt) {\n     let response = Number(document.getElementById('denom').value);\n     if (evt.keyCode === 13) {\n     if (response === problemData[this.state.prob - 1].fracDenom) {\n     d3.select('#denom').style('box-shadow', 'none').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n     }\n     else {\n     if (response === 0 || response === '') {\n        response = 1;\n     }\n     this.setState({answer1 : response, ans1Entered : true}, function() {\n        if (document.getElementById('numer').value !== '') {\n        for (var a = 1; a < this.state.answer3 + 1; a++) {\n        d3.select(`#section${a}`).style('fill', 'rgba(0, 0, 255, 0.1)');\n        }\n        }\n     });\n     }\n  }\n  handleAnswer2() {\n     let response = document.getElementById('wholeName').value;\n     if (response === problemData[this.state.prob - 1].txtans) {\n     d3.select('#wholeName').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n  }\n  handleAnswer3(evt) {\n     let response = Number(document.getElementById('numer').value);\n     if (problemData[this.state.prob - 1].svgType === 'set') {\n     d3.selectAll('.vertSection').style('fill', 'rgba(255, 255, 255, 1)');\n     for (var a = 1; a < response + 1; a++) {\n        d3.select(`#section${a}`).style('fill', 'rgb(0, 0, 255, 0.1)');\n     }\n     if (response === problemData[this.state.prob - 1].fracNum) {\n     d3.select('#numer').style('box-shadow', 'none').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n     }\n     else {\n     if (response === '') {\n        document.getElementById('numer').value = '0';\n        response = 0;\n     }\n     d3.selectAll('.vertSection').style('fill', 'rgba(255, 255, 255, 1)');\n     setTimeout(function(){\n     for (var a = 1; a < response + 1; a++) {\n        d3.select(`#section${a}`).style('fill', 'rgba(0, 0, 255, 0.1)');\n     }\n     }, 50);\n     this.setState({answer3 : response});\n     if (evt.keyCode !== 13) return;\n     if (response === problemData[this.state.prob - 1].fracNum) {\n     d3.select('#numer').style('box-shadow', 'none').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n     }\n  }\n  handleAnswer4() {\n     let response = document.getElementById('estimate').value;\n     if (response === problemData[this.state.prob - 1].estimate) {\n     d3.select('#estimate').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n  }\n  nextProblem() {\n     this.setState({prob : this.state.prob + 1, answer1 : 1, answer3 : 1, ans1Entered : false});\n     setTimeout(function(){window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub]);}, 500);\n  }\n  render() {\n    return (\n      <div>\n      <button className='nextButton' onClick={this.nextProblem} disabled={this.state.prob < 3 ? '' : 'disabled'}>next</button>\n      <div className='container' id='goalnodes_container'>\n      <Goalnodes probnum={this.state.prob} ans1={this.handleAnswer1} ans2={this.handleAnswer2} ans3={this.handleAnswer3} ans4={this.handleAnswer4} ans1Val={this.state.answer1} ans1Submit={this.state.ans1Entered} />\n      </div>\n      <div className='container' id='model_container'>\n      <SVGModel probnum={this.state.prob} ans1Val={this.state.answer1} ans3Val={this.state.answer3} />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\ndocument.getElementById('denom').focus();\n"],"sourceRoot":""}