{"version":3,"sources":["problem_data.js","components/Goalnodes.js","components/SVGModel.js","App.js","index.js"],"names":["problemData","id","fraction","fracNum","fracDenom","estimate","text","answers","q1","q2","txtans","svgType","svg","Goalnodes","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opener","verb","select","select2","props","probnum","concat","indexOf","space","options","b","length","push","react_default","a","createElement","key","value","className","onChange","ans2","ans4","style","color","onKeyUp","ans1","type","maxLength","autoComplete","ans3","disabled","ans1Submit","Component","SVGModel","vertSections","svgs","numSVGs","Math","ceil","ans3Val","ans1Val","svgHeight","window","innerHeight","secs","x","y","width","height","fill","stroke","strokeDasharray","c","preserveAspectRatio","slice","reverse","App","prob","answer1","answer3","ans1Entered","handleAnswer1","bind","assertThisInitialized","handleAnswer2","handleAnswer3","handleAnswer4","evt","response","Number","document","getElementById","setState","d3","keyCode","attr","setTimeout","components_Goalnodes","components_SVGModel","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.205f1245.chunk.js","sourcesContent":["const problemData = [\r\n  {\r\n    id : 1,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{3}{5}}\\\\)',\r\n    fracNum : 3,\r\n    fracDenom : 5,\r\n    estimate : 'less than 1',\r\n    text : 'of a cup',\r\n    answers : [{q1 : 5, q2 : ['a whole cup', '5 cups', '3 cups']}, {q1 : 3}],\r\n    txtans : 'a whole cup',\r\n    svgType : 'area',\r\n    svg : ''\r\n  },\r\n  {\r\n    id : 2,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{6}{2}}\\\\)',\r\n    fracNum : 6,\r\n    fracDenom : 2,\r\n    estimate : 'greater than 1',\r\n    text : 'granola bars',\r\n    answers : [{q1 : 2, q2 : ['a whole granola bar', '2 granola bars', '6 granola bars']}, {q1 : 6}],\r\n    txtans : 'a whole granola bar',\r\n    svgType : 'set',\r\n    svg : ''\r\n  },\r\n  {\r\n    id : 3,\r\n    fraction : '\\\\(\\\\mathtt{\\\\frac{7}{8}}\\\\)',\r\n    fracNum : 7,\r\n    fracDenom : 8,\r\n    estimate : 'less than 1',\r\n    text : 'the number',\r\n    answers : [{q1 : 8, q2 : ['a whole number', '7', '8']}, {q1 : 7}],\r\n    txtans : 'a whole number',\r\n    svgType : 'number-line',\r\n    svg : ''\r\n  }\r\n]\r\n\r\nexport default problemData;\r\n","import React, {Component} from 'react';\r\nimport problemData from '../problem_data.js';\r\n\r\nclass Goalnodes extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let opener;\r\n    if (problemData[this.props.probnum - 1].svgType !== 'number-line') {\r\n       opener = `${problemData[this.props.probnum - 1].fraction} ${problemData[this.props.probnum - 1].text}`;\r\n    }\r\n    else opener = `${problemData[this.props.probnum - 1].text} ${problemData[this.props.probnum - 1].fraction}`;\r\n\r\n    let verb;\r\n    if (problemData[this.props.probnum - 1].fraction.indexOf('1') === 16) verb = 'is';\r\n    else verb = 'are';\r\n\r\n    let select, select2;\r\n    let options = [];\r\n    for (var b = 0; b < problemData[this.props.probnum - 1].answers[0].q2.length; b++) {\r\n       options.push(<option key={b} value={problemData[this.props.probnum - 1].answers[0].q2[b]}>{problemData[this.props.probnum - 1].answers[0].q2[b]}</option>)\r\n    }\r\n    select = (\r\n      <select className='gnSelect' id='wholeName' onChange={this.props.ans2}>\r\n      <option value=''></option>\r\n      {options}\r\n      </select>\r\n    );\r\n    select2 = (\r\n      <select className='gnSelect' id='estimate' onChange={this.props.ans4}>\r\n      <option value=''></option>\r\n      <option key='a' value='less than 1'>less than 1</option>\r\n      <option key='b' value='equal to 1'>equal to 1</option>\r\n      <option key='c' value='greater than 1'>greater than 1</option>\r\n      </select>\r\n    );\r\n\r\n    let space;\r\n    if (problemData[this.props.probnum - 1].fraction.indexOf('1') !== 16) {\r\n       space = <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>;\r\n    }\r\n    else space = <span>&nbsp;&nbsp;&nbsp;&#8202;</span>;\r\n\r\n    return (\r\n    <div>\r\n    <p style={{color : 'teal'}}>Model the fraction <strong>{opener}</strong>.</p>\r\n    <p className='gnode'>\r\n    There {verb} <input onKeyUp={this.props.ans1} type=\"text\" id='denom' className='gnInput' maxLength='2' autoComplete='off' /> equal parts in {select}.\r\n    </p>\r\n    <p className='gnode'>\r\n    {space}Count <input onKeyUp={this.props.ans3} disabled={this.props.ans1Submit ? '' : 'disabled'} type=\"text\" id='numer' className='gnInput' maxLength='1' autoComplete='off' /> parts to model the fraction {problemData[this.props.probnum - 1].fraction}.\r\n    </p>\r\n    <p className='gnode'>\r\n    The fraction {problemData[this.props.probnum - 1].fraction} is {select2}.\r\n    </p>\r\n    </div>\r\n    );\r\n   }\r\n}\r\n\r\nexport default Goalnodes;\r\n","import React, {Component} from 'react';\r\nimport problemData from '../problem_data';\r\n\r\nclass SVGModel extends Component {\r\n   constructor() {\r\n      super();\r\n      this.state = {};\r\n   }\r\n   render() {\r\n     let vertSections = [];\r\n     let svgs = [];\r\n     let numSVGs = Math.ceil(this.props.ans3Val / this.props.ans1Val);\r\n     if (numSVGs === 0) numSVGs = 1;\r\n     let svgHeight = (0.62 * window.innerHeight - 25) / numSVGs;\r\n\r\n     if (problemData[this.props.probnum - 1].svgType === 'area') {\r\n        let secs = this.props.ans1Val || 1;\r\n\r\n        for (var b = 0; b < secs * numSVGs; b++) {\r\n        let id = `section${b + 1}`;\r\n        vertSections.push(\r\n        <rect key={b} id={id} className='vertSection' x='0' y={svgHeight - ((b % secs + 1) * (svgHeight / secs))} width='100%' height={svgHeight / secs} style={{fill : 'none', stroke : 'gray', strokeDasharray : '5 5'}} />\r\n        );\r\n        }\r\n\r\n        for (var c = 0; c < numSVGs; c++) {\r\n        svgs.push(\r\n        <svg key={c} className='vertSVG' width='100%' height={svgHeight} preserveAspectRatio='xMidYMid'>\r\n        {vertSections.slice(c * (secs), secs * (c + 1))}\r\n        </svg>\r\n        );\r\n        }\r\n     }\r\n     return (<div>{svgs.reverse()}</div>);\r\n   }\r\n}\r\n\r\nexport default SVGModel;\r\n","import React, {Component} from 'react';\nimport Goalnodes from './components/Goalnodes';\nimport SVGModel from './components/SVGModel';\nimport * as d3 from 'd3';\nimport problemData from './problem_data.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {prob : 1, answer1 : 1, answer3 : 1, ans1Entered : false};\n    this.handleAnswer1 = this.handleAnswer1.bind(this);\n    this.handleAnswer2 = this.handleAnswer2.bind(this);\n    this.handleAnswer3 = this.handleAnswer3.bind(this);\n    this.handleAnswer4 = this.handleAnswer4.bind(this);\n  }\n  handleAnswer1(evt) {\n     let response = Number(document.getElementById('denom').value);\n     if (response === 0 || response === '') {\n        document.getElementById('denom').value = '1';\n        response = 1;\n     }\n     this.setState({answer1 : response, ans1Entered : true}, function() {\n        if (document.getElementById('numer').value !== '') {\n        for (var a = 1; a < this.state.answer3 + 1; a++) {\n        d3.select(`#section${a}`).style('fill', 'rgba(0, 0, 255, 0.1)');\n        }\n        }\n     });\n     if (evt.keyCode !== 13) return;\n     if (response === problemData[this.state.prob - 1].fracDenom) {\n     d3.select('#denom').style('box-shadow', 'none').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n  }\n  handleAnswer2() {\n     let response = document.getElementById('wholeName').value;\n     if (response === problemData[this.state.prob - 1].txtans) {\n     d3.select('#wholeName').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n  }\n  handleAnswer3(evt) {\n     let response = Number(document.getElementById('numer').value);\n     if (response === '') {\n        document.getElementById('numer').value = '0';\n        response = 0;\n     }\n     d3.selectAll('.vertSection').style('fill', 'rgba(255, 255, 255, 1)');\n     setTimeout(function(){\n     for (var a = 1; a < response + 1; a++) {\n        d3.select(`#section${a}`).style('fill', 'rgba(0, 0, 255, 0.1)');\n     }\n     }, 50);\n     this.setState({answer3 : response});\n     if (evt.keyCode !== 13) return;\n     if (response === problemData[this.state.prob - 1].fracNum) {\n     d3.select('#numer').style('box-shadow', 'none').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n  }\n  handleAnswer4() {\n     let response = document.getElementById('estimate').value;\n     if (response === problemData[this.state.prob - 1].estimate) {\n     d3.select('#estimate').style('font-weight', 900).attr('disabled', 'disabled')\n       .style('border', '1px solid green').style('background-color', 'transparent');\n     }\n  }\n  render() {\n    return (\n      <div>\n      <div className='container' id='goalnodes_container'><Goalnodes probnum={this.state.prob} ans1={this.handleAnswer1} ans2={this.handleAnswer2} ans3={this.handleAnswer3} ans4={this.handleAnswer4} ans1Val={this.state.answer1} ans1Submit={this.state.ans1Entered} /></div>\n      <div className='container' id='model_container'><SVGModel probnum={this.state.prob} ans1Val={this.state.answer1} ans3Val={this.state.answer3} /></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}